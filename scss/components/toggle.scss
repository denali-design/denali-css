@charset "utf-8";
// Copyright 2019, Oath Inc.
// Licensed under the terms of the MIT license. See LICENSE file in project root for terms.

.toggle {
  display: flex;
  position: relative;
  white-space: nowrap;
  overflow: auto;
  padding: var(--toggle-active-border-width);

  input {
    position: absolute !important;
    clip: rect(0, 0, 0, 0);
    overflow: hidden;

    &:checked + label {
      box-shadow: none;
      z-index: 1;
      background-color: var(--toggle-active-bg-color);
      color: var(--toggle-active-text-color);
      border-radius: var(--toggle-active-corner-radius);
      box-shadow: 0 0 0 var(--toggle-active-border-width) var(--toggle-active-border-color);
    }
  }

  > ul {
    display: flex;
  }

  label,
  li {
    display: flex;
    justify-content: center;
    align-items: center;
    transition: all 300ms ease-in-out;
    background: var(--toggle-bg-color);
    color: var(--toggle-text-color);
    font-size: var(--toggle-text-size);
    height: var(--toggle-height);
    padding: var(--toggle-padding);

    a {
      color: inherit;
    }

    &.is-active {
      box-shadow: none;
      z-index: 1;
      background-color: var(--toggle-active-bg-color);
      color: var(--toggle-active-text-color);
      border-radius: var(--toggle-active-corner-radius) !important;
      box-shadow: 0 0 0 var(--toggle-active-border-width) var(--toggle-active-border-color);

      a {
        color: inherit;
      }
    }

    &.is-disabled {
      cursor: not-allowed;
      color: var(--toggle-disabled-text-color);
    }

    &:hover {
      cursor: pointer;
      color: var(--toggle-text-hover-color);
    }

    &:first-of-type {
      border-top-left-radius: var(--toggle-corner-radius);
      border-bottom-left-radius: var(--toggle-corner-radius);
    }

    &:last-of-type {
      border-top-right-radius: var(--toggle-corner-radius);
      border-bottom-right-radius: var(--toggle-corner-radius);
    }
  }

  // Sizes
  &.is-small {
    label,
    li {
      height: var(--toggle-small-height);
      padding: var(--toggle-small-padding);
    }
  }

  // Inverse
  &.is-inverse {
    label,
    li {
      color: var(--toggle-inverse-text-color);
      background: var(--toggle-inverse-bg-color);
      &.is-active {
        color: var(--toggle-inverse-active-text-color);
        background: var(--toggle-inverse-active-bg-color);
      }
    }
  }
}


@mixin toggles-base-theme($theme-config) {

  .toggle {
    padding: deep-map-get($theme-config, "toggles", "active", "border", "width");

    input {
      &:checked + label {
        background-color: deep-map-get($theme-config, "toggles", "active", "background-color");
        color: deep-map-get($theme-config, "toggles", "active", "text-color");
        border-radius: deep-map-get($theme-config, "toggles", "active", "corner-radius");
        box-shadow: 0 0 0 deep-map-get($theme-config, "toggles", "active", "border", "width") deep-map-get($theme-config, "toggles", "active", "border", "color");
      }
    }

    label,
    li {
      background: deep-map-get($theme-config, "toggles", "background-color");
      color: deep-map-get($theme-config, "toggles", "text-color");
      font-size: deep-map-get($theme-config, "toggles", "text-size");
      height: deep-map-get($theme-config, "toggles", "height");
      padding: deep-map-get($theme-config, "toggles", "padding");

      &.is-active {
        background-color: deep-map-get($theme-config, "toggles", "active", "background-color");
        color: deep-map-get($theme-config, "toggles", "active", "text-color");
        border-radius: deep-map-get($theme-config, "toggles", "active", "corner-radius") !important;
        box-shadow: 0 0 0 deep-map-get($theme-config, "toggles", "active", "border", "width") deep-map-get($theme-config, "toggles", "active", "border", "color");
      }

      &.is-disabled {
        color: deep-map-get($theme-config, "toggles", "disabled", "text-color");
      }

      &:hover {
        color: deep-map-get($theme-config, "toggles", "text-hover-color");
      }

      &:first-of-type {
        border-top-left-radius: deep-map-get($theme-config, "toggles", "corner-radius");
        border-bottom-left-radius: deep-map-get($theme-config, "toggles", "corner-radius");
      }

      &:last-of-type {
        border-top-right-radius: deep-map-get($theme-config, "toggles", "corner-radius");
        border-bottom-right-radius: deep-map-get($theme-config, "toggles", "corner-radius");
      }
    }

    // Sizes
    &.is-small {
      label,
      li {
        height: deep-map-get($theme-config, "toggles", "small", "height");
        padding: deep-map-get($theme-config, "toggles", "small", "padding");
      }
    }

    // Inverse
    &.is-inverse {
      label,
      li {
        color: deep-map-get($theme-config, "toggles", "inverse", "text-color");
        background: deep-map-get($theme-config, "toggles", "inverse", "background-color");
        &.is-active {
          color: deep-map-get($theme-config, "toggles", "inverse", "active", "text-color");
          background: deep-map-get($theme-config, "toggles", "inverse", "active", "background-color");
        }
      }
    }
  }

}
